buildscript {
    ext {
        kotlinVersion = '1.2.41'
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}


subprojects {



    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'maven'
    apply plugin: 'java'
    apply plugin: "jacoco"
    apply plugin: 'findbugs'


    sourceCompatibility = 1.8
    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }


    jacocoTestReport {
        reports {
            xml.enabled
            csv.enabled
            html.destination file("${buildDir}/reports/jacoco.Html")
        }
    }
    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
            reportLevel = "low"
            ignoreFailures = true
            html.destination file("${buildDir}/reports/findBugs.Html")
        }
    }

    ext {
        swaggerVersion = '2.7.0'
        springCloudVersion = 'Finchley.RC1'
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/libs-snapshot' }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        jcenter()
        mavenLocal()
    }



    dependencies {
        compile('org.springframework.boot:spring-boot-starter-actuator')
        compile('org.springframework.boot:spring-boot-starter-aop')
        compile('org.springframework.cloud:spring-cloud-starter-config')
        compile('org.springframework.cloud:spring-cloud-config-client')
        compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
        compile('org.springframework.cloud:spring-cloud-starter-openfeign')
        //compile('org.springframework.cloud:spring-cloud-starter-sleuth')
        compile('org.springframework.cloud:spring-cloud-starter-zipkin')
        compile('org.springframework.boot:spring-boot-starter-security')
        compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
        compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
        compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
        compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
        compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.4.1'
        compile group: 'ch.rasc', name: 'bsoncodec', version: '1.0.1'

        compile group: 'commons-io', name: 'commons-io', version: '2.6'
        // https://mvnrepository.com/artifact/com.github.danielwegener/logback-kafka-appender
        compile group: 'com.github.danielwegener', name: 'logback-kafka-appender', version: '0.2.0-RC1'


        compile group: 'org.codehaus.janino', name: 'janino', version: '3.0.8'

        runtime('org.springframework.boot:spring-boot-devtools')
        testCompile('org.springframework.boot:spring-boot-starter-test') {
            exclude(module: 'commons-logging')
        }
        testCompile('org.springframework.security:spring-security-test')
        testCompile group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.5.0'
        testCompile 'org.mockito:mockito-core:1.+'


    }



    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }


}